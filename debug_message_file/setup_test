#!/bin/bash

echo `date` "debug_message_file/setup_test called (console)."
echo `date` "debug_message_file/setup_test called (debug file)." >> debug.txt

## check user name
# whoami
## check groups
# groups

### confirm ssh can be used or not
## ssh already installed
# apt-get install openssh-server
## systemctl not found
# systemctl start sshd
## check sshd config file
# cat /etc/ssh/sshd_config

MINICONDAFILE="Miniconda3-py37_4.9.2-Linux-x86_64.sh"
MINICONDAFILESIZE="90040905"
MINICONDADIR="./miniconda"
MINICONDAENV="${MINICONDADIR}/envs/test"
if [ ! -f ${MINICONDAFILE} ]; then
    echo ""
    echo `date` "[01/10]: download miniconda start."
    curl -O https://repo.anaconda.com/miniconda/${MINICONDAFILE}
    echo ""
    echo `date` "[01/10]: download miniconda end."
elif [ "`ls -l | grep ${MINICONDAFILE} | awk -F ' ' '{ printf $5 }'`" != "${MINICONDAFILESIZE}" ]; then
    echo ""
    echo `date` "[02/10]: downloading miniconda."
    echo `date` "${MINICONDAFILE} file size extraction result: " "`ls -l | grep ${MINICONDAFILE} | cut -d ' ' -f 5`"
    echo `date` "ls -l & grep result: " "`ls -l | grep ${MINICONDAFILE}`"
elif [ "`ls -l | grep ${MINICONDAFILE} | awk -F ' ' '{ printf $5 }'`" == "${MINICONDAFILESIZE}" ] && [ ! -d ${MINICONDADIR} ]; then
    echo ""
    echo `date` "[03/10]: install miniconda start."
    chmod +x Miniconda3-py39_4.9.2-Linux-x86_64.sh
    bash ./Miniconda3-py39_4.9.2-Linux-x86_64.sh -b -p ${MINICONDADIR}
    echo ""
    echo `date` "[03/10]: install miniconda end."
elif [ -d ${MINICONDADIR} ] && [ ! -d ${MINICONDAENV} ]; then
    echo ""
    echo `date` "[04/10]: conda update/create start."
    ./miniconda/bin/conda update -y -n base -c defaults conda
    ./miniconda/bin/conda create -y -n test
    echo ""
    echo `date` "[04/10]: conda update/create end."
elif [ -d ${MINICONDAENV} ] && [ "`grep miniconda ~/.bashrc`" == "" ]; then
    echo ""
    echo `date` "[05/10]: conda init start."
    ./miniconda/bin/conda init
    source ~/.bashrc
    echo ""
    echo `date` "[05/10]: conda init end."
elif [ "`grep miniconda ~/.bashrc`" != "" ] && [ ! -f ${MINICONDAENV}/x86_64-conda-linux-gnu/sysroot/usr/sbin/modprobe ]; then
    echo ""
    echo `date` "[06/10]: install kmod module start."
    conda activate test
    conda install -c conda-forge kmod-cos7-x86_64
    echo ""
    echo `date` "[06/10]: install kmod module end."
elif [ -f ${MINICONDAENV}/x86_64-conda-linux-gnu/sysroot/usr/sbin/modprobe ]; then
    echo ""
    echo `date` "[07/10]: check tun and try to use start."
    echo `date` "[07/10]: check tun and try to use start. (debug)" >> debug.txt
    ${MINICONDAENV}/x86_64-conda-linux-gnu/sysroot/usr/sbin/lsmod | grep tun >> debug.txt
    ${MINICONDAENV}/x86_64-conda-linux-gnu/sysroot/usr/sbin/modprobe tun >> debug.txt
    ${MINICONDAENV}/x86_64-conda-linux-gnu/sysroot/usr/sbin/lsmod | grep tun >> debug.txt
    echo ""
    echo `date` "[07/10]: check tun and try to use end."
    echo `date` "[07/10]: check tun and try to use end. (debug)" >> debug.txt
    echo ""
    echo `date` "[08/10]: setup openvpn start."
    echo `date` "[08/10]: setup openvpn start. (debug)" >> debug.txt
    curl -O https://raw.githubusercontent.com/angristan/openvpn-install/master/openvpn-install.sh
    chmod +x openvpn-install.sh
    sed -i -e 's/if \[ "$EUID" -ne 0 \]; then/if [ 0 -ne 0 ]; then/g' openvpn-install.sh
    AUTO_INSTALL=y
    ./openvpn-install.sh
fi
